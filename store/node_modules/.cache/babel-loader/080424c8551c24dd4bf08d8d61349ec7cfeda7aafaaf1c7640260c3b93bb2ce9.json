{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\React-typescript\\\\store\\\\src\\\\components\\\\NavigationButton.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavigationButton = _ref => {\n  _s();\n  let {\n    navItem,\n    _navItems\n  } = _ref;\n  const [isPressed, setIsPressed] = useState(navItem.isCurrent);\n  const [navItems, setNavItems] = useState(_navItems);\n  const HandlePressed = name => {\n    if (!isPressed) {\n      setIsPressed(!isPressed);\n    }\n    setNavItems(navItems.map(n => {\n      return {\n        name: n.name,\n        href: n.href,\n        isCurrent: n.name !== name ? !n.isCurrent : n.isCurrent\n      };\n    }));\n    console.log(navItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: isPressed ? \"w-1/4 font-raleway border-t-4 border-stone-900 text-stone-900 font-bold\" : \"w-1/4 h-30 font-raleway text-stone-300 transition ease-in-out hover:bg-stone-400 hover:text-stone-50 duration-200\",\n    onClick: () => HandlePressed(navItem.name),\n    children: navItem.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(NavigationButton, \"uq/efkVm6Wk+8VrkaF0VTzBXid0=\");\n_c = NavigationButton;\nexport default NavigationButton;\nvar _c;\n$RefreshReg$(_c, \"NavigationButton\");","map":{"version":3,"names":["useState","NavigationButton","navItem","_navItems","isPressed","setIsPressed","isCurrent","navItems","setNavItems","HandlePressed","name","map","n","href","console","log"],"sources":["E:/Projects/React-typescript/store/src/components/NavigationButton.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { NavigationItem } from '../Models';\r\n\r\ninterface Props {\r\n    navItem: NavigationItem,\r\n    _navItems: NavigationItem[],\r\n    //setNavItems: React.Dispatch<React.SetStateAction<NavigationItem[]>>;\r\n}\r\n \r\nconst NavigationButton: React.FunctionComponent<Props> = ({navItem, _navItems}) => {\r\n\r\n    const [isPressed, setIsPressed] = useState<boolean>(navItem.isCurrent);\r\n    const [navItems, setNavItems] = useState<NavigationItem[]>(_navItems)\r\n\r\n\r\n    const HandlePressed = (name: string) => {\r\n        if (!isPressed) {\r\n            setIsPressed(!isPressed);\r\n            \r\n        }\r\n        setNavItems(navItems.map((n) => {\r\n            return {\r\n                name: n.name,\r\n                href: n.href,\r\n                isCurrent: n.name !== name ? !n.isCurrent : n.isCurrent\r\n            }\r\n        }));\r\n        \r\n        console.log(navItems);\r\n    };\r\n\r\n    return ( \r\n        \r\n        <button className = \r\n        {\r\n            isPressed ? \r\n            (\r\n                \"w-1/4 font-raleway border-t-4 border-stone-900 text-stone-900 font-bold\"\r\n            ) : (\r\n                \"w-1/4 h-30 font-raleway text-stone-300 transition ease-in-out hover:bg-stone-400 hover:text-stone-50 duration-200\"\r\n            )\r\n        } onClick = {() => HandlePressed(navItem.name)}>\r\n            {navItem.name}\r\n        </button>\r\n    );\r\n}\r\n \r\nexport default NavigationButton;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AASjC,MAAMC,gBAAgD,GAAG,QAA0B;EAAA;EAAA,IAAzB;IAACC,OAAO;IAAEC;EAAS,CAAC;EAE1E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAUE,OAAO,CAACI,SAAS,CAAC;EACtE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAmBG,SAAS,CAAC;EAGrE,MAAMM,aAAa,GAAIC,IAAY,IAAK;IACpC,IAAI,CAACN,SAAS,EAAE;MACZC,YAAY,CAAC,CAACD,SAAS,CAAC;IAE5B;IACAI,WAAW,CAACD,QAAQ,CAACI,GAAG,CAAEC,CAAC,IAAK;MAC5B,OAAO;QACHF,IAAI,EAAEE,CAAC,CAACF,IAAI;QACZG,IAAI,EAAED,CAAC,CAACC,IAAI;QACZP,SAAS,EAAEM,CAAC,CAACF,IAAI,KAAKA,IAAI,GAAG,CAACE,CAAC,CAACN,SAAS,GAAGM,CAAC,CAACN;MAClD,CAAC;IACL,CAAC,CAAC,CAAC;IAEHQ,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;EACzB,CAAC;EAED,oBAEI;IAAQ,SAAS,EAEbH,SAAS,GAEL,yEAAyE,GAEzE,mHAEP;IAAC,OAAO,EAAI,MAAMK,aAAa,CAACP,OAAO,CAACQ,IAAI,CAAE;IAAA,UAC1CR,OAAO,CAACQ;EAAI;IAAA;IAAA;IAAA;EAAA,QACR;AAEjB,CAAC;AAAA,GApCKT,gBAAgD;AAAA,KAAhDA,gBAAgD;AAsCtD,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}