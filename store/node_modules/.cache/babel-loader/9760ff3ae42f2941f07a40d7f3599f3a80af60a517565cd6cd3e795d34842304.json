{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\React-typescript\\\\store\\\\src\\\\components\\\\NavigationButton.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavigationButton = _ref => {\n  _s();\n  let {\n    navItem,\n    navItems\n  } = _ref;\n  const [isPressed, setIsPressed] = useState(navItem.isCurrent);\n  const HandlePressed = name => {\n    if (!isPressed) {\n      setIsPressed(!isPressed);\n    }\n    console.log(navItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: isPressed ? \"w-1/4 font-raleway border-t-4 border-stone-900 text-stone-900 font-bold\" : \"w-1/4 h-30 font-raleway text-stone-300 transition ease-in-out hover:bg-stone-400 hover:text-stone-50 duration-200\",\n    onClick: () => HandlePressed(navItem.name),\n    children: navItem.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(NavigationButton, \"wmWs2aEVAFJT3qNi6xoYL/BpzCQ=\");\n_c = NavigationButton;\nexport default NavigationButton;\nvar _c;\n$RefreshReg$(_c, \"NavigationButton\");","map":{"version":3,"names":["useState","NavigationButton","navItem","navItems","isPressed","setIsPressed","isCurrent","HandlePressed","name","console","log"],"sources":["E:/Projects/React-typescript/store/src/components/NavigationButton.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { NavigationItem } from '../Models';\r\n\r\ninterface Props {\r\n    navItem: NavigationItem,\r\n    navItems: NavigationItem[],\r\n    setNavItems: React.Dispatch<React.SetStateAction<NavigationItem[]>>;\r\n}\r\n \r\nconst NavigationButton: React.FunctionComponent<Props> = ({navItem, navItems}) => {\r\n\r\n    const [isPressed, setIsPressed] = useState<boolean>(navItem.isCurrent);\r\n    \r\n\r\n\r\n    const HandlePressed = (name : string) => {\r\n        if (!isPressed) {\r\n            setIsPressed(!isPressed);\r\n            \r\n        }\r\n        \r\n        console.log(navItems);\r\n    };\r\n\r\n    return ( \r\n        \r\n        <button className = \r\n        {\r\n            isPressed ? \r\n            (\r\n                \"w-1/4 font-raleway border-t-4 border-stone-900 text-stone-900 font-bold\"\r\n            ) : (\r\n                \"w-1/4 h-30 font-raleway text-stone-300 transition ease-in-out hover:bg-stone-400 hover:text-stone-50 duration-200\"\r\n            )\r\n        } onClick = {() => HandlePressed(navItem.name)}>\r\n            {navItem.name}\r\n        </button>\r\n    );\r\n}\r\n \r\nexport default NavigationButton;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AASjC,MAAMC,gBAAgD,GAAG,QAAyB;EAAA;EAAA,IAAxB;IAACC,OAAO;IAAEC;EAAQ,CAAC;EAEzE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAUE,OAAO,CAACI,SAAS,CAAC;EAItE,MAAMC,aAAa,GAAIC,IAAa,IAAK;IACrC,IAAI,CAACJ,SAAS,EAAE;MACZC,YAAY,CAAC,CAACD,SAAS,CAAC;IAE5B;IAEAK,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;EACzB,CAAC;EAED,oBAEI;IAAQ,SAAS,EAEbC,SAAS,GAEL,yEAAyE,GAEzE,mHAEP;IAAC,OAAO,EAAI,MAAMG,aAAa,CAACL,OAAO,CAACM,IAAI,CAAE;IAAA,UAC1CN,OAAO,CAACM;EAAI;IAAA;IAAA;IAAA;EAAA,QACR;AAEjB,CAAC;AAAA,GA7BKP,gBAAgD;AAAA,KAAhDA,gBAAgD;AA+BtD,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}